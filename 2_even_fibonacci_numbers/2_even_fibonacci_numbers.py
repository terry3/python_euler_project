#!/usr/bin/python
# -*- coding: utf-8 -*-
"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


class Fibo(object):
    def __init__(self):
        self.a = 1
        self.b = 1

    def next(self):
        sum = self.a + self.b
        self.a = self.b
        self.b = sum
        return sum
    def b_is_even(self):
        return True if self.b % 2 == 0 else False

four_m = 4 * 1000 * 1000


def find_fibo(max = 10):
    fibo = Fibo()
    sum = 0
    re = fibo.next()
    while re < max:
        if fibo.b_is_even():
            sum += fibo.b
        re = fibo.next()
    return sum

print find_fibo(four_m)

